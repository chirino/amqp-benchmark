#!/bin/bash
#
# This shell script creates the html index file which displays
# results of the benchmarks.
#
if [ -z "${SKIP_REPORT}" ] ; then
BASEDIR=`dirname "$0"`/.. ; cd "${BASEDIR}" ; BASEDIR=`pwd` ; cd - > /dev/null
. ${BASEDIR}/bin/benchmark-setup

# Get a list of json files...
cd "${REPORTS_HOME}/.."

JSON_FILES=""
for f in `ls */*.json | grep -v '/platform.json' 2> /dev/null` ; do
  JSON_FILES+="$f
"
done

PLATFORMS=""
for f in $JSON_FILES ; do
  PLATFORMS+="$(dirname $f)
"
done
PLATFORMS=`(sort <<< "$PLATFORMS") | uniq`
PLATFORMS=$(cat <<< "$PLATFORMS" | sed 's|$|",|' | sed 's|^|"|')
PLATFORMS=$(echo $PLATFORMS | sed 's|,$||' | sed 's|"", ||')

PRODUCTS=""
for f in $JSON_FILES ; do
  PRODUCTS+="$(basename $f | sed 's/.json//')
$PRODUCTS"
done
PRODUCTS=`(sort <<< "$PRODUCTS") | uniq`
PRODUCTS=$(cat <<< "$PRODUCTS" | sed 's|$|",|' | sed 's|^|"|')
PRODUCTS=$(echo $PRODUCTS | sed 's|,$||' | sed 's|"", ||')

cat > "index.json" <<EOF
{
  "platforms":[${PLATFORMS}],
  "products":[${PRODUCTS}]
}
EOF

cd - > /dev/null

#
# Only create it if it does not exist as it may get 
# customized by hand later.
if [ ! -f "${REPORTS_HOME}/platform.json" ] ; then
  cat > "${REPORTS_HOME}/platform.json" <<EOF
{
  "description":"$(uname -a)"
}
EOF
  
fi
if [ ! -f "${REPORTS_HOME}/server-info.html" ] ; then
  
  cat > "${REPORTS_HOME}/server-info.html" <<EOF
  <!-- Feel free to manually edit this file, subsequent benchmark runs will not update it. -->
  <h2>Machine Details</h2>
  <pre>$(uname -a)</pre>
EOF

  DATA=`lsb_release -sd 2>&1`
  if [ $? -eq 0 ] ; then
    echo "<pre>${DATA}</pre>" >> "${REPORTS_HOME}/server-info.html" 
  fi

  DATA=`free -m 2>&1`
  if [ $? -eq 0 ] ; then
    echo "<pre>${DATA}</pre>" >> "${REPORTS_HOME}/server-info.html" 
  fi

  DATA=`cat /proc/cpuinfo 2>&1`
  if [ $? -eq 0 ] ; then
    echo "<pre>${DATA}</pre>" >> "${REPORTS_HOME}/server-info.html" 
  fi

  DATA=`java -version 2>&1`
  if [ $? -eq 0 ] ; then
    echo "<pre>${DATA}</pre>" >> "${REPORTS_HOME}/server-info.html" 
  fi

  which erl > /dev/null
  if [ $? -eq 0 ] ; then
    DATA=`erl -version 2>&1`
  else
    DATA=`${WORKSPACE}/erlang/bin/erl -version 2>&1`
  fi
  if [ $? -eq 0 ] ; then
    echo "<pre>" >> "${REPORTS_HOME}/server-info.html" 
    echo "${DATA}" >> "${REPORTS_HOME}/server-info.html" 
    echo "</pre>" >> "${REPORTS_HOME}/server-info.html" 
  fi

fi

echo "=========================================================================="
echo "Results stored under: ${REPORTS_HOME}"
echo "=========================================================================="

fi