#!/bin/bash
#
# This shell script automates running the amqp-benchmark [1] against the
# RabbitMQ project [2].
#
# [1]: http://github.com/chirino/amqp-benchmark
# [2]: http://www.rabbitmq.com/
#
true \
${RABBITMQ_VERSION:=0.0.0} \
${RABBITMQ_DOWNLOAD:="http://www.rabbitmq.com/releases/rabbitmq-server/v${RABBITMQ_VERSION}/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.gz"}

BASEDIR=`dirname "$0"`/.. ; cd "${BASEDIR}" ; BASEDIR=`pwd` ; cd - > /dev/null
. ${BASEDIR}/bin/benchmark-setup

function server_start() {

  RABBITMQ_HOME="${WORKSPACE}/rabbitmq_server-${RABBITMQ_VERSION}"
  RABBITMQ_BASE="${WORKSPACE}/rabbitmq-${RABBITMQ_VERSION}"

  which erl > /dev/null
  if [ $? -ne 0 ] ; then
    cd "${WORKSPACE}"
    which erl > /dev/null
    if [ $? -ne 0 ] ; then
      # Lets install erlang..
      if [ ! -f "${WORKSPACE}/erlang/bin/erl" ] ; then
        # Download it...
        if [ ! -d "${WORKSPACE}/otp_src_R15B01" ] ; then 
          wget http://www.erlang.org/download/otp_src_R15B01.tar.gz
          tar -zxvf otp_src_R15B01.tar.gz
          rm otp_src_R15B01.tar.gz 
        fi

        # Need the GCC toolchain to build erlang
        which yum > /dev/null && sudo yum -y install make gcc gcc-c++ kernel-devel m4 ncurses-devel openssl-devel
        which apt-get > /dev/null && sudo apt-get install -y build-essential ncurses-dev libssl-dev

        cd "${WORKSPACE}/otp_src_R15B01"
        ./configure --with-ssl --prefix="${WORKSPACE}/erlang"
        make install
      fi
      export PATH="${WORKSPACE}/erlang/bin:${PATH}"
    fi
  fi 

  #
  # Install the distro
  #
  if [ ! -d "${RABBITMQ_HOME}" ]; then
    cd ${WORKSPACE}
    
    #wget "$RABBITMQ_DOWNLOAD"
    #tar -zxvf rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.gz
    #rm -rf rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.gz
    
    if [ ! -d "${WORKSPACE}/rabbitmq-public-umbrella" ]; then
      hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella
      cd rabbitmq-public-umbrella
      make up
      cd rabbitmq-server/
      hg up bug23749
      cd ../rabbitmq-codegen/
      hg up bug23749
      cd ..
      hg clone http://hg.rabbitmq.com/rabbitmq-amqp1.0
    fi

    cd "${WORKSPACE}/rabbitmq-public-umbrella"
    cd rabbitmq-server
    make srcdist
    cd packaging/generic-unix
    make

    cd "${WORKSPACE}/rabbitmq-public-umbrella/rabbitmq-amqp1.0"
    make
    
    cd ${WORKSPACE}
    tar -zxvf "${WORKSPACE}/rabbitmq-public-umbrella/rabbitmq-server/packaging/generic-unix/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.gz"
    cp rabbitmq-public-umbrella/rabbitmq-amqp1.0/dist/*.ez ${RABBITMQ_HOME}/plugins
  fi

  mkdir -p "${RABBITMQ_BASE}"

  # Cleanup preious executions.
  server_stop
  rm -rf "${RABBITMQ_BASE}/*"

  #
  # Rabbit config
  export RABBITMQ_NODENAME=rabbit
  export RABBITMQ_SERVER_ERL_ARGS=
  export RABBITMQ_CONFIG_FILE="${RABBITMQ_BASE}/config"
  export RABBITMQ_LOG_BASE="${RABBITMQ_BASE}/logs"
  export RABBITMQ_MNESIA_BASE="${RABBITMQ_BASE}/mnesia"
  export RABBITMQ_ENABLED_PLUGINS_FILE="${RABBITMQ_BASE}/plugins"
  export RABBITMQ_SERVER_START_ARGS=

  #
  # Start the server
  #s
  CONSOLE_LOG="${REPORTS_HOME}/rabbitmq-${RABBITMQ_VERSION}.log"
  "${RABBITMQ_HOME}/sbin/rabbitmq-plugins" enable rabbitmq_amqp1_0
  "${RABBITMQ_HOME}/sbin/rabbitmq-server" > "${CONSOLE_LOG}" 2>&1 &
  RABBITMQ_PID=$!
  echo "Started RabbitMQ with PID: ${RABBITMQ_PID}"
  sleep 5
  cat "${CONSOLE_LOG}"
}

function benchmark_run() {
  $BENCHMARK_EXEC --host $1 --user guest --password guest  ${BASEDIR}/scenarios.xml "${REPORTS_HOME}/rabbitmq-${RABBITMQ_VERSION}-$(date "+%Y-%m-%d").json"
}

benchmark_main $*
